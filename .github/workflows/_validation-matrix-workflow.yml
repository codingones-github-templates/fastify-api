name: zReusable - Validation Matrix Workflow

on:
  workflow_call:
    inputs:
      validation-commands:
        required: true
        type: string
      fail-fast:
        required: false
        type: boolean
        default: true
      node-version:
        required: false
        type: string
        default: 'lts/*'
      package-manager:
        required: false
        type: string
        default: 'npm'
      install-dependencies-command:
        required: false
        type: string
        default: 'npm ci'
    secrets:
      DISCORD_NOTIFY_HOOK_URL:
        required: false

jobs:
  execute-command:
    name: ' '
    runs-on: ubuntu-latest
    strategy:
      fail-fast: ${{ inputs.fail-fast }}
      matrix:
        command: ${{fromJson(inputs.validation-commands)}}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
          cache: ${{ inputs.package-manager }}
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies
        run: ${{ inputs.install-dependencies-command }}

      - name: Run Command
        run: ${{ matrix.command }}

  notify-discord:
    needs:
      - execute-command
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    env:
      DISCORD_NOTIFY_HOOK_URL: ${{ secrets.DISCORD_NOTIFY_HOOK_URL }}
    steps:
      - name: Has webhook url
        run: echo "has_webhook_url=${DISCORD_NOTIFY_HOOK_URL:+true}" >> $GITHUB_ENV

      - name: Prepare payload
        if: env.has_webhook_url == 'true'
        run: >-
          (jq -r '.' <<< '
          {
            "username": "CI Failure Bot",
            "content": "Validation for branch ${{ github.ref_name }} has failed.",
            "embeds": [{
              "title": "Some validation checks have failed",
              "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }]
          }'
          ) > payload

      - name: Send notification
        if: env.has_webhook_url == 'true'
        run: >-
          curl
          --header "Content-Type:application/json"
          --request POST
          --data @payload
          ${{ secrets.DISCORD_NOTIFY_HOOK_URL }}
